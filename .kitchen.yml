---
driver:
  name: docker

provisioner:
  name: ansible_playbook
  require_ansible_repo: true
  enable_yum_epel: true
  ansible_verbose: true
  playbook: tests/testkitchen.yml
  hosts: localhost
  extra_vars:
    threatstack_deploy_key: <%= ENV['TS_DEPLOY_KEY'] != nil ? ENV['TS_DEPLOY_KEY'] : 'ts_deploy_key' %>
    <% if ENV['TS_NO_CONFIG_AGENT']  %>
    threatstack_configure_agent: false
    <% end %>
    threatstack_agent_config_args: <%= ENV['TS_CONFIG_ARGS'] %>
    <% if ENV['TS_PACKAGE_VERSION'] %>
    # Should be in form threatstack-version=<version>.  ex. threatstack-version=1.4.4.0ubuntu14.0
    threatstack_pkg: <%= ENV['TS_PACKAGE_VERSION'] %>
    <% end %>
    <% if ENV['TS_RULE_SETS'] %>
    threatstack_ruleset: "<%= ENV['TS_RULE_SETS'] %>"
    <% end %>
    <% if ENV['TS_HOSTNAME'] %>
    threatstack_hostname: "<%= ENV['TS_HOSTNAME'] %>"
    <% end %>
    <% if ENV['TS_URL'] %>
    threatstack_url: "<%= ENV['TS_URL'] %>"
    <% end %>
    <% if ENV['TS_FEATURE_PLAN'] %>
    threatstack_feature_plan: "<%= ENV['TS_FEATURE_PLAN'] %>"
    <% end %>

platforms:
  - name: amazon-1
    driver_config:
      image: amazonlinux:1
      platform: amazonlinux
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - chkconfig auditd on
  - name: amazon-2
    driver_config:
      image: amazonlinux:2
      platform: amazonlinux
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
    image: centos:7
  - name: centos-7
    driver_config:
      image: centos:7
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: centos-8
    driver_config:
      image: centos:8
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: debian-8
    driver_config:
      image: debian:8
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-9
    driver_config:
      image: debian:9
      run_command: /bin/systemd
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-10
    driver_config:
      image: debian:10
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-16.04
    driver_config:
      image: ubuntu:16.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-18.04
    driver_config:
      image: ubuntu:18.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-20.04
    driver_config:
      image: ubuntu:20.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service

suites:
  - name: default
